#jinja2: lstrip_blocks: "True"
[Unit]
Description=Jitsi Jibri ({{ jitsi_identifier }})
{% for service in jitsi_jibri_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} kill {{ jitsi_identifier }}-jibri 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ jitsi_identifier }}-jibri 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
			--rm \
			--name={{ jitsi_identifier }}-jibri \
			--log-driver=none \
			--network={{ jitsi_container_network }} \
			--network-alias=jibri.meet.jitsi \
			--env-file={{ jitsi_jibri_base_path }}/env \
			--label-file={{ jitsi_jibri_base_path }}/labels \
			--mount type=bind,src={{ jitsi_jibri_config_path }},dst=/config \
                        --mount type=bind,src=/tmp/.X11-unix,dst=/tmp/.X11-unix \
			{% for arg in jitsi_jibri_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ jitsi_jibri_container_image }}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ jitsi_identifier }}-jibri

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} kill {{ jitsi_identifier }}-jibri 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ jitsi_identifier }}-jibri 2>/dev/null || true'
Restart=always
RestartSec=30
SyslogIdentifier={{ jitsi_identifier }}-jibri

[Install]
WantedBy=multi-user.target
